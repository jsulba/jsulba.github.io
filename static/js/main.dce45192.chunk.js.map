{"version":3,"sources":["components/navbar.js","components/welcome.js","components/about_me.js","components/projects.js","components/blog.js","components/app.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","grow","fullWidth","width","name","fontStyle","fontWeight","Navbar","React","useState","setAnchorEl","drawer","setDrawer","page","setPage","determinePath","index","classes","id","className","Accordion","expanded","AccordionSummary","Toolbar","IconButton","edge","color","aria-label","onClick","event","currentTarget","Typography","variant","determinePage","ButtonGroup","to","Button","stopPropagation","href","Divider","AccordionDetails","List","map","text","ListItem","button","key","ListItemIcon","determineIcon","ListItemText","primary","title","Welcome","src","AboutMe","Projects","Blog","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yeA0BMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAaJ,EAAMK,QAAQ,IAE/BC,KAAM,CACFJ,SAAU,GAEdK,UAAW,CACPC,MAAO,QAEXC,KAAM,CACFP,SAAU,EACVQ,UAAW,SACXC,WAAY,eAKL,SAASC,IAAU,IAAD,EACGC,IAAMC,SAAS,MADlB,mBACZC,GADY,aAEDF,IAAMC,UAAS,GAFd,mBAEtBE,EAFsB,KAEdC,EAFc,OAKLJ,IAAMC,UAAU,GALX,mBAKtBI,EALsB,KAKhBC,EALgB,KAwBvBC,EAAgB,SAACC,GACnB,OAAOA,GACH,KAAK,EAAG,MAAO,YACf,KAAK,EAAG,MAAO,YACf,KAAK,EAAG,MAAO,QACf,QAAS,MAAO,MA8BlBC,EAAUxB,IAEhB,OACI,yBAAKyB,GAAG,UAAUC,UAAWF,EAAQrB,MACjC,kBAACwB,EAAA,EAAD,CAAWC,SAAUV,GACjB,kBAACW,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAASJ,UAAWF,EAAQf,WACxB,kBAACsB,EAAA,EAAD,CAAYC,KAAK,QAAQN,UAAWF,EAAQnB,WAAY4B,MAAM,UAAUC,aAAW,QAC/E,kBAAC,IAAD,CAAUC,QA5DV,SAACC,GACjBnB,EAAYmB,EAAMC,eAClBlB,GAAWD,OA4DC,kBAACoB,EAAA,EAAD,CAAYC,QAAQ,KAAKb,UAAWF,EAAQhB,MApCtC,SAACe,GACnB,OAAOA,GACH,KAAK,EAAG,MAAO,WACf,KAAK,EAAG,MAAO,WACf,KAAK,EAAG,MAAO,OACf,QAAS,MAAO,WAgCHiB,CAAcpB,IAEnB,kBAACkB,EAAA,EAAD,CAAYZ,UAAWF,EAAQb,MAA/B,kBAGA,kBAAC8B,EAAA,EAAD,CAAaF,QAAQ,QACjB,kBAAC,IAAD,CAAMG,GAAG,KAAI,kBAACC,EAAA,EAAD,CAAQV,MAAM,UAAUE,QAAS,SAACC,GAAWA,EAAMQ,kBAAmBvB,GAAS,KAAK,kBAAC,IAAD,QACjG,uBAAGwB,KAAK,6BAA4B,kBAACF,EAAA,EAAD,CAAQV,MAAM,WAAU,kBAAC,IAAD,QAC5D,uBAAGY,KAAK,mDAAkD,kBAACF,EAAA,EAAD,CAAQV,MAAM,WAAU,kBAAC,IAAD,WAI1F,kBAACa,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KAtCR,yBAAKrB,UAAWF,EAAQf,WACpB,kBAACuC,EAAA,EAAD,CAAMtB,UAAWF,EAAQhB,MACpB,CAAC,WAAY,WAAY,QAAQyC,KAAI,SAACC,EAAM3B,GAAP,OAClC,kBAAC4B,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAKH,GAClB,kBAAC,IAAD,CAAMR,GAAIpB,EAAcC,GAAQG,UAAU,OAAOS,QAAS,SAACC,GAAWA,EAAMQ,kBAAmBzB,GAAU,GAAQE,EAAQE,KACrH,kBAAC+B,EAAA,EAAD,KAlCF,SAAC/B,GACnB,OAAOA,GACH,KAAK,EAAG,OAAQ,kBAAC,IAAD,MAChB,KAAK,EAAG,OAAQ,kBAAC,IAAD,MAChB,KAAK,EAAG,OAAQ,kBAAC,IAAD,OA8BegC,CAAchC,IAC7B,kBAACiC,EAAA,EAAD,CAAcC,QAASP,c,WC9F7ClD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BmD,MAAO,CACLtD,SAAU,OAID,SAASuD,IACJ3D,IAChB,OACE,6BACE,yBAAK4D,IAAI,kCACT,uECjBR,IAAM5D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BmD,MAAO,CACLtD,SAAU,OAID,SAASyD,IACJ7D,IAChB,OACE,0CCfN,IAAMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BmD,MAAO,CACLtD,SAAU,OAID,SAAS0D,IACJ9D,IAChB,OACE,0CCfN,IAAMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BmD,MAAO,CACLtD,SAAU,OAID,SAAS2D,IACJ/D,IAChB,OACE,sCCVS,SAASgE,IAEpB,OACI,yBAAKvC,GAAG,WACJ,kBAACX,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,IAAIC,UAAWR,IACjC,kBAAC,IAAD,CAAOO,KAAK,aAAaC,UAAWN,IACpC,kBAAC,IAAD,CAAOK,KAAK,aAAYC,UAAWL,IACnC,kBAAC,IAAD,CAAOI,KAAK,SAASC,UAAWJ,MCN5BK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAACX,EAAD,QAGJY,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.dce45192.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// Styles for navbar\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    fullWidth: {\r\n        width: \"100%\",\r\n    },\r\n    name: {\r\n        flexGrow: 1,\r\n        fontStyle: \"italic\",\r\n        fontWeight: \"lighter\",\r\n    },\r\n}));\r\n\r\n// Navigation component to be used in every view\r\nexport default function Navbar() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [drawer, setDrawer] = React.useState(false);\r\n\r\n    // Page: Welcome-0, AboutMe-1, Projects-2, Blog-3\r\n    const [page, setPage] = React.useState(-1);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        setDrawer(!drawer);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const determineIcon = (index) => {\r\n        switch(index){\r\n            case 0: return (<PersonIcon/>);\r\n            case 1: return (<HomeWorkIcon/>);\r\n            case 2: return (<CreateIcon/>);\r\n        }\r\n    }\r\n\r\n    const determinePath = (index) => {\r\n        switch(index){\r\n            case 0: return \"/about_me\";\r\n            case 1: return \"/projects\";\r\n            case 2: return \"/blog\";\r\n            default: return \"/\";\r\n        }\r\n    }\r\n\r\n    const determinePage = (index) => {\r\n        switch(index){\r\n            case 0: return \"About Me\";\r\n            case 1: return \"Projects\";\r\n            case 2: return \"Blog\";\r\n            default: return \"Welcome\";\r\n        }\r\n    }\r\n\r\n\r\n    // This syntax is a arrow function but it uses parantheses because it is returning an object. If we used {} it would read as a statements and not an object.\r\n    const list = () => (\r\n        <div className={classes.fullWidth}>\r\n            <List className={classes.grow}>\r\n                {['About Me', 'Projects', 'Blog'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <Link to={determinePath(index)} className=\"link\" onClick={(event) => {event.stopPropagation(); setDrawer(false); setPage(index)}}>\r\n                            <ListItemIcon>{determineIcon(index)}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </Link>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div id=\"wrapper\" className={classes.root}>\r\n            <Accordion expanded={drawer}>\r\n                <AccordionSummary>\r\n                <Toolbar className={classes.fullWidth}>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon onClick={handleClick}/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.grow}>\r\n                        {determinePage(page)}\r\n                    </Typography>\r\n                    <Typography className={classes.name}>\r\n                        Jose Fernandez\r\n                    </Typography>\r\n                    <ButtonGroup variant=\"text\">\r\n                        <Link to=\"/\"><Button color=\"inherit\" onClick={(event) => {event.stopPropagation(); setPage(-1)}}><HomeIcon /></Button></Link>\r\n                        <a href=\"https://github.com/jsulba\"><Button color=\"inherit\"><GitHubIcon /></Button></a>\r\n                        <a href=\"https://www.linkedin.com/in/jose-ale-fernandez/\"><Button color=\"inherit\"><LinkedInIcon /></Button></a>\r\n                    </ButtonGroup>\r\n                </Toolbar>\r\n                </AccordionSummary>\r\n                <Divider />\r\n                <AccordionDetails>\r\n                    {list()}\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function Welcome() {\r\n    const classes = useStyles();\r\n    return(\r\n      <div>\r\n        <img src=\"../assets/20200725_155849.jpg\"></img>\r\n        <h2>Take a look around and get to know me!</h2>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function AboutMe() {\r\n    const classes = useStyles();\r\n    return(\r\n      <div>\r\n        About Me!\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function Projects() {\r\n    const classes = useStyles();\r\n    return(\r\n      <div>\r\n        Projects!\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function Blog() {\r\n    const classes = useStyles();\r\n    return(\r\n      <div>\r\n        Blog!\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Navbar from './navbar';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Welcome from './welcome';\r\nimport AboutMe from './about_me';\r\nimport Projects from './projects';\r\nimport Blog from './blog';\r\n\r\n\r\nexport default function App() {\r\n\r\n    return(\r\n        <div id=\"wrapper\">\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Welcome} />\r\n                <Route path=\"/about_me/\" component={AboutMe} />\r\n                <Route path=\"/projects/\"component={Projects} />\r\n                <Route path=\"/blog/\" component={Blog} />\r\n            </Switch>\r\n        </div>\r\n        );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n// Define App class (main page to hold other components)\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}